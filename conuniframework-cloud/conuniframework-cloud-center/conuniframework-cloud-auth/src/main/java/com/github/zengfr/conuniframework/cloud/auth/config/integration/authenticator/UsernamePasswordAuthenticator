package com.github.zengfr.conuniframework.cloud.auth.config.integration.authenticator;

import com.github.zengfr.conuniframework.cloud.auth.config.integration.IntegrationAuthenticationEntity;
import com.github.zengfr.conuniframework.cloud.auth.domain.OAuth2User;
import com.github.zengfr.conuniframework.cloud.auth.repository.OAuth2UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.oauth2.common.exceptions.OAuth2Exception;
import org.springframework.stereotype.Component;
import org.springframework.util.StringUtils;

import java.util.Optional;

/** @Author: yugu @CreateDate: 2018/9/27$ 上午8:31$ @Description: 普通认证器（用户名+密码） */
@Component
@Primary
public class UsernamePasswordAuthenticator extends AbstractPreparableIntegrationAuthenticator {

  @Autowired private OAuth2UserRepository mapper;

  @Autowired private PasswordEncoder passwordEncoder;

  @Override
  public OAuth2User authenticate(IntegrationAuthenticationEntity entity) {
    String name = entity.getAuthParameter("name");
    String pwd = entity.getAuthParameter("pwd");
    if (name == null || pwd == null) {
      throw new OAuth2Exception("用户名或密码不能为空");
    }
    Optional<OAuth2User> pojo = mapper.findByUsername(name);
    if (pojo.isPresent()) {
      if (passwordEncoder.matches(pwd, pojo.get().getPassword())) {
        return pojo.get();
      }
    }
    return null;
  }

  @Override
  public boolean support(IntegrationAuthenticationEntity entity) {
    return StringUtils.isEmpty(entity.getAuthType());
  }
}
